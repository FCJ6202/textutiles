{"version":3,"sources":["Components/Alert.js","Components/Navbar.js","Components/TextField.js","Text.js","reportWebVitals.js","index.js"],"names":["Alert","props","message","className","type","role","Navbar","useState","mystyle","setmystyle","heading","setheading","href","title","id","home","about","onClick","toggleMode","SetAlert","htmlFor","style","color","TextField","text","setText","find","setfind","value","onChange","e","target","rows","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","trim","length","split","name","indexOf","App","alert","setalert","mode","setmode","setTimeout","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9ca19086.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        props.message && <div className='container'>\r\n            <div className={`alert alert-${props.type} alert-dismissible fade show`} role=\"alert\">\r\n                {props.message}\r\n                {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n  const [mystyle, setmystyle] = useState(\"light\")\r\n  const [heading, setheading] = useState(\"Enable dark mode\");\r\n\r\n  const HandleDarkMode = () => {\r\n    if(mystyle === \"light\"){\r\n      setmystyle(\"dark\");\r\n      props.toggleMode();\r\n      props.SetAlert(\"Enable Dark Mode\",\"success\");\r\n      setheading(\"Enable light Mode\")\r\n    }else{\r\n      setmystyle(\"light\");\r\n      props.toggleMode();\r\n      props.SetAlert(\"Enable light Mode\",\"success\");\r\n      setheading(\"Enable Dark Mode\")\r\n    }\r\n  }\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${mystyle} bg-${mystyle}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">{props.home}</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">{props.about}</a>\r\n            </li>\r\n          </ul>\r\n          <div className=\"form-check form-switch\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={HandleDarkMode}/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" style = {mystyle===\"dark\"?{color : \"white\"} : {color:\"#212529\"}}>{heading}</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  about: PropTypes.string,\r\n  home: PropTypes.string\r\n};\r\n","import React,{ useState } from 'react'\r\n\r\nexport default function TextField(props) {\r\n    const [text, setText] = useState(\"\");\r\n    const [find, setfind] = useState(\"\");\r\n\r\n    const HandleOnChange = (e) =>{\r\n        setText(e.target.value);\r\n    }\r\n\r\n    const HandleToUppercase = () => {\r\n        setText(text.toUpperCase());\r\n    }\r\n\r\n    const HandleToLowercase = () => {\r\n        setText(text.toLowerCase());\r\n    }\r\n\r\n    const HandleOfFind = (e) => {\r\n        setfind(e.target.value);\r\n    }\r\n\r\n    const HandleCopyText = () => {\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n\r\n    const HandleClickFind = () => {\r\n        if(find === \"\"){\r\n            props.SetAlert(\"please enter the word which you want to find\",\"danger\");\r\n            \r\n        }else{\r\n            let temp = text.indexOf(find,0);\r\n            if(temp>=0){\r\n                props.SetAlert(\"This word present in your text\",\"success\");\r\n            }else{\r\n                props.SetAlert(\"This word not present in your text\",\"danger\");\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <div className = \"container my-4\">\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3 my-3\">\r\n                <textarea className=\"form-control\" value = {text} onChange={HandleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-3\" onClick = {HandleToUppercase}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-3\" onClick = {HandleToLowercase}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-3\" onClick = {HandleCopyText}>Copy Text</button>\r\n        </div>\r\n        <div className=\"container my-3\">\r\n            <p>character : {text.trim().length}</p>\r\n            <p>word : {text.trim().split(\" \").length}</p>\r\n            <h2>Your above text</h2>\r\n            <p>{text === \"\"?`please write the text in above text area`:text}</p>\r\n            <h6>Find the word from above text</h6>\r\n            <input type=\"text\" value = {find} onChange = {HandleOfFind} name=\"find\" id=\"find\" />\r\n            <button className=\"btn-primary btn mx-3\" onClick={HandleClickFind}>Find</button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from 'react'\nimport Alert from './Components/Alert';\n//import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport Field from './Components/TextField';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [alert, setalert] = useState({\n    message: null,\n    type: null\n  });\n\n  const [mode, setmode] = useState(\"dark\");\n\n  const SetAlert = (message, type) => {\n    setalert({\n      message: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      SetAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === \"dark\") {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"#170534\";\n      document.body.style.color = \"white\";\n    } else {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"#170534\";\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar\n          title=\"textutiles\"\n          about=\"About\"\n          home=\"Home\"\n          SetAlert={SetAlert}\n          toggleMode={toggleMode}\n        />\n        <Alert message={alert.message} type={alert.type} />\n        {/* <div className=\"container my-3\">\n        <Routes>\n          <Route exact path=\"/\" element={ */}\n            <Field\n            SetAlert={SetAlert}\n            heading=\"Enter your text\"\n            />\n          {/* }/>\n          <Route exact path=\"/about\" element={\n            <About />\n          }/>\n        </Routes>\n        </div>\n      </Router> */}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Text';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}